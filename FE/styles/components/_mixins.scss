@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}


@mixin background($imgpath,$position:0 0,$repeat: no-repeat) {
	background: {
		image: url($imgpath);
		position: $position;
		repeat: $repeat;
	}
}

@mixin background-gradient-and-image ($fallback, $imgUrl, $background-position-x, $background-position-y, $startColor, $endColor) {
    background: $fallback;
    background: url($imgUrl) $background-position-x $background-position-y no-repeat; /* fallback */
    background: url($imgUrl) $background-position-x $background-position-y no-repeat, -webkit-gradient(linear, left top, left bottom, from($startColor) $background-position-x $background-position-y no-repeat, to($endColor)); /* Saf4+, Chrome */
    background: url($imgUrl) $background-position-x $background-position-y no-repeat, -webkit-linear-gradient(top, $startColor, $endColor); /* Chrome 10+, Saf5.1+ */
    background: url($imgUrl) $background-position-x $background-position-y no-repeat,    -moz-linear-gradient(top, $startColor, $endColor); /* FF3.6+ */
    background: url($imgUrl) $background-position-x $background-position-y no-repeat,     -ms-linear-gradient(top, $startColor, $endColor); /* IE10 */
    background: url($imgUrl) $background-position-x $background-position-y no-repeat,      -o-linear-gradient(top, $startColor, $endColor); /* Opera 11.10+ */
    background: url($imgUrl) $background-position-x $background-position-y no-repeat,         linear-gradient(top, $startColor, $endColor); /* W3C */
}

@mixin extra-small  {
	@media (max-width: #{$extra-small}) {
		@content;
	}
}

@mixin small  {
	@media (min-width: #{$extra-small + 1px}) and (max-width: #{$small}) {
		@content;
	}
}

@mixin medium  {
	@media (min-width: #{$small + 1px}) and (max-width: #{$medium}) {
		@content;
	}
}

@mixin large  {
	@media (min-width: #{$medium + 1px}) and (max-width: #{$large}) {
		@content;
	}
}

@mixin extra-large  {
	@media (min-width: #{$large + 1px}) {
		@content;
	}
}

@mixin cinema  {
	@media (min-width: #{$extra-large + 1px}) {
		@content;
	}
}

@mixin less($width)  {
	@media (max-width: #{$width - 1px}) {
		@content;
	}
}

@mixin more($width)  {
	@media (min-width: #{$width}) {
		@content;
	}
}
