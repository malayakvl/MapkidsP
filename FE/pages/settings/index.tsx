import Head from "next/head";
import { getSession } from "next-auth/react";
import BackendLayout from "../../components/Layout/BackendLayout";
import { Formik } from "formik";
import Image from "next/image";
import * as Yup from "yup";
import { useDispatch, useSelector } from "react-redux";
import { fetchItemAction, submitFormAction } from "../../redux/settings";
import { InputText } from "../../components/_form";
import React, { useEffect } from "react";
import { itemSelector } from "../../redux/settings/selectors";

export default function Settings({ session }: { session: any }) {
  const dispatch = useDispatch();
  const settingsData = useSelector(itemSelector);

  useEffect(() => {
    dispatch(fetchItemAction());
  }, [dispatch]);

  if (!session) return <></>;

  const SubmitSchema = Yup.object().shape({
    email_notification: Yup.string()
      .trim("Cannot include leading and trailing spaces")
      .min(3, "Must be at least 3 characters")
      .email("Must be a valid email")
      .strict(true)
      .required("You must enter email"),
    count_per_page: Yup.number().required("Required field"),
  });

  return (
    <>
      <Head>
        <title>Mapkids - Settings</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className="flex flex-wrap">
        <div className="w-full lg:w-8/12 px-4">
          <div className="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0">
            <div className="rounded-t bg-white mb-0 px-6 py-6">
              <div className="text-center flex justify-between">
                <h6 className="text-blueGray-700 text-xl font-bold">
                  General Settings
                </h6>
              </div>
            </div>
            <div className="flex-auto px-4 lg:px-10 py-10 pt-0">
              <Formik
                initialValues={settingsData}
                enableReinitialize
                validationSchema={SubmitSchema}
                onSubmit={(values: any) => {
                  dispatch(submitFormAction(values));
                }}
              >
                {(props: any) => (
                  <form onSubmit={props.handleSubmit}>
                    <div className="flex flex-wrap mt-4">
                      <InputText
                        icon={null}
                        style={"w-full"}
                        label={"Email for notifications"}
                        name={"email_notification"}
                        placeholder={"Notification Email"}
                        props={props}
                        tips={"Enter valid email for notifications"}
                      />
                    </div>
                    <div className="flex flex-wrap mt-4">
                      <InputText
                        icon={null}
                        style={"w-full"}
                        label={"Count Items Per Page"}
                        name={"count_per_page"}
                        placeholder={"Items Per Page"}
                        props={props}
                        tips={"Enter Count Items Per Page"}
                      />
                    </div>
                    <div className="flex flex-wrap mt-4">
                      <button type="submit" className="gray-medium-button">
                        Submit
                      </button>
                    </div>
                  </form>
                )}
                {/*    <div className="flex-auto px-4 lg:px-10 py-10 pt-0">*/}
                {/*    <div className="flex flex-wrap mt-4">*/}
                {/*        */}
                {/*        <div className="relative w-full mb-3">*/}
                {/*            <label*/}
                {/*                className="block uppercase text-blueGray-600 text-xs font-bold mb-2"*/}
                {/*                htmlFor="grid-password">Email Notification*/}
                {/*            </label>*/}
                {/*            <input type="text"*/}
                {/*                   className="border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150"*/}
                {/*                   value="lucky.jesse"*/}
                {/*            />*/}
                {/*        </div>*/}
                {/*    </div>*/}
                {/*</div>*/}
              </Formik>
            </div>
          </div>
        </div>
        <div className="w-full lg:w-4/12 px-4">
          <div className="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-xl rounded-lg mt-16">
            <div className="px-6">
              <div className="flex flex-wrap justify-center">
                <div className="w-full px-4 flex justify-center">
                  <div className="relative">
                    <Image
                      className="shadow-xl rounded-full
                                                        h-auto align-middle border-none absolute -m-16 -ml-20
                                                        lg:-ml-16 max-w-150-px"
                      src="/images/profile-photo.jpg"
                      width="150"
                      height="150"
                      alt=""
                    />
                  </div>
                </div>
                <div className="w-full px-4 text-center mt-20">
                  <div className="flex justify-center py-4 lg:pt-4 pt-8">
                    <div className="mr-4 p-3 text-center">
                      <span className="text-xl font-bold block uppercase tracking-wide text-blueGray-600">
                        22
                      </span>
                      <span className="text-sm text-blueGray-400">Friends</span>
                    </div>
                    <div className="mr-4 p-3 text-center">
                      <span className="text-xl font-bold block uppercase tracking-wide text-blueGray-600">
                        10
                      </span>
                      <span className="text-sm text-blueGray-400">Photos</span>
                    </div>
                    <div className="lg:mr-4 p-3 text-center">
                      <span className="text-xl font-bold block uppercase tracking-wide text-blueGray-600">
                        89
                      </span>
                      <span className="text-sm text-blueGray-400">
                        Comments
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
Settings.Layout = BackendLayout;

export async function getServerSideProps(context: any) {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: { destination: `/auth/signin` },
    };
  }

  return {
    props: {
      session,
    },
  };
}
